# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- test
- build
- deploy
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml
docker-build:
  stage: build
  services:
  - docker:dind
  before_script:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
  - cd api/
  - docker build --pull -t "$REGISTRY/api/goxor_store-api" .
  - docker push "$REGISTRY/api/goxor_store-api"
  - cd ../web
  - docker build --pull -t "$REGISTRY/website/goxor_store-website" .
  - docker push "$REGISTRY/website/goxor_store-website"
  rules:
  - if: "$CI_COMMIT_BRANCH"
    exists:
    - api/Dockerfile
    - web/Dockerfile
deploy-job:
  stage: deploy
  before_script:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
  - docker-compose -f 'docker-compose.yml' --project-name 'w-gxrstr' down
  - docker-compose -f 'docker-compose.yml' --project-name 'w-gxrstr' up -d
  rules:
  - if: "$CI_COMMIT_BRANCH"
    exists:
    - docker-compose.yml
